{"ast":null,"code":"import { CLEAR_FILTERS, FILTER_PRODUCTS, UPDATE_SORT, LOAD_PRODUCTS, SET_GRID_VIEW, SORT_PRODUCTS, UPDATE_FILTERS, SET_LIST_VIEW } from \"../utils/actions\";\nexport const filter_reducer = (state, action) => {\n  const {\n    type,\n    payload\n  } = action;\n  if (type === LOAD_PRODUCTS) {\n    let maxPrice = payload.map(product => product.price);\n    maxPrice = Math.max(...maxPrice);\n    return {\n      ...state,\n      all_products: [...payload],\n      filtered_products: [...payload],\n      filters: {\n        ...state.filters,\n        max_price: maxPrice,\n        price: maxPrice\n      }\n    };\n  }\n  if (type === SET_GRID_VIEW) {\n    return {\n      ...state,\n      grid_view: true\n    };\n  }\n  if (type === SET_LIST_VIEW) {\n    return {\n      ...state,\n      grid_view: false\n    };\n  }\n  if (type === UPDATE_SORT) {\n    return {\n      ...state,\n      sort: payload\n    };\n  }\n  if (type === SORT_PRODUCTS) {\n    const {\n      sort,\n      filtered_products\n    } = state;\n    let tempProducts = [...filtered_products];\n    if (sort === \"price-lowest\") {\n      tempProducts = tempProducts.sort((a, b) => a.price - b.price);\n    }\n    if (sort === \"price-highest\") {\n      tempProducts = tempProducts.sort((a, b) => b.price - a.price);\n    }\n    if (sort === \"name-a\") {\n      tempProducts = tempProducts.sort((a, b) => {\n        return a.title.localeCompare(b.title);\n      });\n    }\n    if (sort === \"name-z\") {\n      tempProducts = tempProducts.sort((a, b) => {\n        return b.title.localeCompare(a.title);\n      });\n    }\n    return {\n      ...state,\n      filtered_products: tempProducts\n    };\n  }\n  if (type === UPDATE_FILTERS) {\n    const {\n      name,\n      value\n    } = payload;\n    return {\n      ...state,\n      filters: {\n        ...state.filters,\n        [name]: value\n      }\n    };\n  }\n  if (type === FILTER_PRODUCTS) {\n    const {\n      all_products\n    } = state;\n    const {\n      text,\n      category,\n      price\n    } = state.filters;\n    let tempProducts = [...all_products];\n    if (text) {\n      tempProducts = tempProducts.filter(product => product.title.toLowerCase().includes(text));\n    }\n    if (category !== \"all\") {\n      tempProducts = tempProducts.filter(product => product.category === category);\n    }\n    tempProducts = tempProducts.filter(product => product.price <= price);\n    return {\n      ...state,\n      filtered_products: tempProducts\n    };\n  }\n  if (type === CLEAR_FILTERS) {\n    return {\n      ...state,\n      filters: {\n        ...state.filters,\n        text: \"\",\n        category: \"all\",\n        price: state.filters.max_price\n      }\n    };\n  }\n  throw new Error(`No Matching \"${type}\" - action type `);\n};","map":{"version":3,"names":["CLEAR_FILTERS","FILTER_PRODUCTS","UPDATE_SORT","LOAD_PRODUCTS","SET_GRID_VIEW","SORT_PRODUCTS","UPDATE_FILTERS","SET_LIST_VIEW","filter_reducer","state","action","type","payload","maxPrice","map","product","price","Math","max","all_products","filtered_products","filters","max_price","grid_view","sort","tempProducts","a","b","title","localeCompare","name","value","text","category","filter","toLowerCase","includes","Error"],"sources":["/home/developer/Downloads/ReactJS_FakeStore_API/src/reducers/filter_reducer.js"],"sourcesContent":["import {\r\n  CLEAR_FILTERS,\r\n  FILTER_PRODUCTS,\r\n  UPDATE_SORT,\r\n  LOAD_PRODUCTS,\r\n  SET_GRID_VIEW,\r\n  SORT_PRODUCTS,\r\n  UPDATE_FILTERS,\r\n  SET_LIST_VIEW,\r\n} from \"../utils/actions\";\r\n\r\nexport const filter_reducer = (state, action) => {\r\n  const { type, payload } = action;\r\n\r\n  if (type === LOAD_PRODUCTS) {\r\n    let maxPrice = payload.map((product) => product.price);\r\n    maxPrice = Math.max(...maxPrice);\r\n\r\n    return {\r\n      ...state,\r\n      all_products: [...payload],\r\n      filtered_products: [...payload],\r\n      filters: { ...state.filters, max_price: maxPrice, price: maxPrice },\r\n    };\r\n  }\r\n\r\n  if (type === SET_GRID_VIEW) {\r\n    return { ...state, grid_view: true };\r\n  }\r\n  if (type === SET_LIST_VIEW) {\r\n    return { ...state, grid_view: false };\r\n  }\r\n\r\n  if (type === UPDATE_SORT) {\r\n    return { ...state, sort: payload };\r\n  }\r\n\r\n  if (type === SORT_PRODUCTS) {\r\n    const { sort, filtered_products } = state;\r\n    let tempProducts = [...filtered_products];\r\n    if (sort === \"price-lowest\") {\r\n      tempProducts = tempProducts.sort((a, b) => a.price - b.price);\r\n    }\r\n    if (sort === \"price-highest\") {\r\n      tempProducts = tempProducts.sort((a, b) => b.price - a.price);\r\n    }\r\n    if (sort === \"name-a\") {\r\n      tempProducts = tempProducts.sort((a, b) => {\r\n        return a.title.localeCompare(b.title);\r\n      });\r\n    }\r\n    if (sort === \"name-z\") {\r\n      tempProducts = tempProducts.sort((a, b) => {\r\n        return b.title.localeCompare(a.title);\r\n      });\r\n    }\r\n\r\n    return { ...state, filtered_products: tempProducts };\r\n  }\r\n\r\n  if (type === UPDATE_FILTERS) {\r\n    const { name, value } = payload;\r\n    return { ...state, filters: { ...state.filters, [name]: value } };\r\n  }\r\n\r\n  if (type === FILTER_PRODUCTS) {\r\n    const { all_products } = state;\r\n    const { text, category, price } = state.filters;\r\n    let tempProducts = [...all_products];\r\n\r\n    if (text) {\r\n      tempProducts = tempProducts.filter((product) =>\r\n        product.title.toLowerCase().includes(text)\r\n      );\r\n    }\r\n\r\n    if (category !== \"all\") {\r\n      tempProducts = tempProducts.filter(\r\n        (product) => product.category === category\r\n      );\r\n    }\r\n\r\n    tempProducts = tempProducts.filter((product) => product.price <= price);\r\n\r\n    return { ...state, filtered_products: tempProducts };\r\n  }\r\n\r\n  if (type === CLEAR_FILTERS) {\r\n    return {\r\n      ...state,\r\n      filters: {\r\n        ...state.filters,\r\n        text: \"\",\r\n        category: \"all\",\r\n        price: state.filters.max_price,\r\n      },\r\n    };\r\n  }\r\n\r\n  throw new Error(`No Matching \"${type}\" - action type `);\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}